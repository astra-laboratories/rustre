WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
arg_idents = { ident ~ ("," ~ ident)* }
arg = { arg_idents ~ ":" ~ ident }
arg_list = { (arg ~ ("," ~ arg)*)? }
call = { ident ~ "(" ~ (expr ~ ("," ~ expr)*)? ~ ")" }
bool = { "true" | "false" }
int = @{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
float = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* | "." ~ ASCII_DIGIT+ }
unit = { "()" }
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
	!("\"" | "\\") ~ ANY
	| "\\" ~ ("\"" | "\\" | "n" | "r" | "t")
}
constant = { bool | float | int | string | unit }
unop = @{ "-" | "-." | "not" }
binop = @{ "+." | "-." | "*." | "/." | "+" | "-" | "*" | "/" |
	"<=" | ">=" | "<" | ">" | "=" | "and" | "or" | "fby" }
unop_expr = { unop ~ expr }
ifrule = { "if" ~ expr ~ "then" ~ expr ~ "else" ~ expr }
pexpr = { "(" ~ expr ~ ")" }
expr_tuple = { "(" ~ expr ~ ("," ~ expr)+ ~ ")" }
term = _{ call | constant | unop_expr | ifrule | ident | expr_tuple | pexpr }
expr = { term ~ (binop ~ expr)* }
motif = { "(" ~ ident ~ ("," ~ ident)* ~ ")" | ident ~ ("," ~ ident)* }
eq = { motif ~ "=" ~ expr ~ ";" }
eq_list = { eq* }
local = { ("var" ~ (arg_list ~ ";")*)? }
node = {
	"node" ~ ident ~ "(" ~ arg_list ~ ")" ~
	"returns" ~ "(" ~ arg_list ~ ")" ~ ";" ~
	local ~
	"let" ~ eq_list ~ "tel"
}
node_list = { node* }
file = _{ SOI ~ node_list ~ EOI }
